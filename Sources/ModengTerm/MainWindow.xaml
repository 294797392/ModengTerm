<Window x:Class="ModengTerm.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xtermuc="clr-namespace:XTerminal.UserControls"
        xmlns:mtermcontrols="clr-namespace:ModengTerm.Controls"
        xmlns:toolkitconverter="clr-namespace:WPFToolkit.Converters;assembly=WPFToolkit"
        xmlns:modengtermbase="clr-namespace:ModengTerm.Base.Enumerations;assembly=ModengTerm.Base"
        xmlns:converters="clr-namespace:ModengTerm"
        xmlns:terminaluc="clr-namespace:ModengTerm.UserControls.Terminals"
        xmlns:termenum="clr-namespace:ModengTerm.Terminal.Enumerations;assembly=ModengTerm.Terminal"
        xmlns:mcmd="clr-namespace:ModengTerm"
        xmlns:local="clr-namespace:ModengTerm"
        xmlns:vm="clr-namespace:ModengTerm.ViewModels"
        mc:Ignorable="d"
        Title="{DynamicResource ResourceKey=UIText1}"
        Width="900" Height="700" WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded" WindowStyle="None">

    <!-- 看不到窗口的拖动标，并且窗口四周有阴影更好看 -->
    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="5" GlassFrameThickness="1" NonClientFrameEdges="None"
                      CaptionHeight="0"/>
    </WindowChrome.WindowChrome>

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static mcmd:MCommands.SendCommand}" Executed="SendCommand_Executed"/>
    </Window.CommandBindings>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
            </ResourceDictionary.MergedDictionaries>

            <toolkitconverter:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
            <local:SessionImageConverter x:Key="SessionImageConverter"/>
            <converters:RecordStatusVisibilityConverter x:Key="RecordStatusVisibilityConverter"/>
            <converters:RecordStatus2TextConverter x:Key="RecordStatus2TextConverter"/>
            <converters:SessionStatus2TextConverter x:Key="SessionStatus2TextConverter"/>
            <converters:SessionStatus2BrushConverter x:Key="SessionStatus2BrushConverter"/>
            <converters:SessionStatus2ImageConverter x:Key="SessionStatus2ImageConverter"/>

            <DataTemplate x:Key="DataTemplateOpenedSession">

                <Grid Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*" MinWidth="80"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>

                    <Image Grid.Column="0" Width="24" Height="24" Source="{Binding Path=Session.Type, Converter={StaticResource ResourceKey=SessionImageConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    <TextBlock Grid.Column="2" Text="{Binding Path=Name}" VerticalAlignment="Center" HorizontalAlignment="Left"/>

                    <!--MouseOverBrush="Silver" MouseDownBrush="#9E9E9E"-->
                    <mtermcontrols:MdButton Grid.Column="3" x:Name="ButtonClose" SVGMargin="5" CornerRadius="2"
                                               SVGColor="Black" Tag="{Binding}" Visibility="Collapsed" Width="20" Height="20"
                                               MouseOverBrush="{DynamicResource ResourceKey=BrushCloseSessionHover}" MouseDownBrush="{DynamicResource ResourceKey=BrushCloseSessionDown}"
                                               SVGPath="M512 466.944l233.472-233.472a31.744 31.744 0 0 1 45.056 45.056L557.056 512l233.472 233.472a31.744 31.744 0 0 1-45.056 45.056L512 557.056l-233.472 233.472a31.744 31.744 0 0 1-45.056-45.056L466.944 512 233.472 278.528a31.744 31.744 0 0 1 45.056-45.056z"
                                               Click="ButtonCloseSession_Click" Style="{StaticResource ResourceKey=StyleMdButton}"/>

                </Grid>

                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Visibility" Value="Visible" TargetName="ButtonClose"/>
                    </Trigger>
                </DataTemplate.Triggers>

            </DataTemplate>

            <DataTemplate x:Key="DataTemplateOpenSession">
                <mtermcontrols:MdButton Content="+" FontWeight="Bold" FontSize="16" Width="25" Height="25" CornerRadius="2"
                                           VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                           MouseOverBrush="{DynamicResource ResourceKey=BrushOpenSessonHover}" 
                                           MouseDownBrush="{DynamicResource ResourceKey=BrushOpenSessionDown}"
                                           Click="ButtonOpenSession_Click" Style="{StaticResource ResourceKey=StyleMdButton}"/>
            </DataTemplate>

            <Style x:Key="StyleMenuItemLocal" TargetType="{x:Type MenuItem}">
                <Setter Property="Height" Value="25"/>
                <Setter Property="Width" Value="50"/>
            </Style>

            <Style x:Key="StyleListBoxItemSession" TargetType="{x:Type ListBoxItem}">
                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Setter Property="BorderThickness" Value="1,1,1,0"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Margin" Value="2,0,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,0,0"/>
                                <ContentPresenter Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="StyleListBoxItemOpenedSession" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ResourceKey=StyleListBoxItemSession}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ResourceKey=BrushSessionSelected}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="StyleListBoxItemOpenSession" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ResourceKey=StyleListBoxItemSession}">

            </Style>

            <Style x:Key="StyleListBoxSessionList" TargetType="{x:Type ListBox}">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="0,0,5,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Grid>

                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"/>

                                <ItemsPresenter Grid.Column="0" Margin="{TemplateBinding Padding}"/>

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="StyleMTermButtonTitle" TargetType="{x:Type mtermcontrols:MdButton}" BasedOn="{StaticResource ResourceKey=StyleMdButton}">
                <Setter Property="SVGColor" Value="Black"/>
                <Setter Property="SVGMargin" Value="7"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="MouseOverBrush" Value="{DynamicResource ResourceKey=BrushMainWindowButtonHoverBackground}"/>
                <Setter Property="MouseDownBrush" Value="{DynamicResource ResourceKey=BrushMainWindowButtonDownBackground}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Focusable" Value="False"/>
            </Style>

            <Style x:Key="StyleTextBlockStatusBar" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="StyleBorderSplitter" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BrushBackground1}"/>
                <Setter Property="Margin" Value="3,6,3,6"/>
                <Setter Property="Width" Value="2"/>
            </Style>

            <Style x:Key="StyleButtonLocal" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="3"/>
            </Style>

            <Style x:Key="StyleMenuLocal" TargetType="{x:Type Menu}">
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=StyleMenuItemLocal}"/>
            </Style>

        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <!-- 菜单 -->

        <Grid Grid.Row="0" MouseLeftButtonDown="Border_MouseLeftButtonDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Grid.ColumnSpan="99" BorderBrush="{DynamicResource ResourceKey=BrushTitleBorder}" 
                    Background="{DynamicResource ResourceKey=BrushTitleBackground}"
                    Padding="5,0,0,0" BorderThickness="0,0,0,1" Height="30"/>

            <Image Grid.Column="0" Source="{DynamicResource ResourceKey=1}" Width="20" Height="20"/>

            <StackPanel Grid.Column="1" Orientation="Horizontal">

                <Menu Style="{StaticResource ResourceKey=StyleMenuLocal}">
                    <MenuItem Header="会话">
                        <MenuItem Header="新建会话" Click="MenuItemCreateSession_Click"/>
                        <MenuItem Header="打开会话" Click="MenuItemOpenSession_Click"/>
                        <MenuItem Header="分组管理" Click="MenuItemGroupManager_Click"/>
                        <MenuItem Header="最新打开的会话" ItemsSource="{Binding Path=RecentlyOpenedSession}">
                            <MenuItem.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Name}"/>
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}">
                                    <EventSetter Event="Click" Handler="MenuItemOpenRecentSessions_Click"/>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                    </MenuItem>
                </Menu>

                <Menu ItemsSource="{Binding Path=TitleMenus}" Style="{StaticResource ResourceKey=StyleMenuLocal}"
                      MenuItem.Click="MenuItem_Click">
                    <Menu.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}">

                            <!-- 设置了HierarchicalDataTemplate.ItemContainerStyle之后，所有Children的数据模板就使用同一个了，暂时不知道什么原理.. -->
                            <HierarchicalDataTemplate.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}">
                                </Style>
                            </HierarchicalDataTemplate.ItemContainerStyle>
                            
                            <TextBlock Text="{Binding Path=Name}"/>
                            
                        </HierarchicalDataTemplate>
                    </Menu.ItemTemplate>
                </Menu>

                <Menu Style="{StaticResource ResourceKey=StyleMenuLocal}">
                    <MenuItem Header="帮助">
                        <MenuItem Header="关于" Click="MenuItemAbout_Click"/>
                        <!--<MenuItem Header="调试窗口" Click="MenuItemDebugWindow_Click"/>-->
                    </MenuItem>
                </Menu>
            </StackPanel>


            <mtermcontrols:MdButton Grid.Column="2" SVGPath="{StaticResource ResourceKey=SVGIcon10}" Click="ButtonMinmizedWindow_Click" Style="{StaticResource ResourceKey=StyleMTermButtonTitle}"/>

            <mtermcontrols:MdButton Grid.Column="3" SVGPath="{StaticResource ResourceKey=SVGIcon11}" Click="ButtonMaxmizedWindow_Click" Style="{StaticResource ResourceKey=StyleMTermButtonTitle}"/>

            <mtermcontrols:MdButton Grid.Column="4" SVGPath="{StaticResource ResourceKey=SVGIcon6}" Click="ButtonCloseWindow_Click" Style="{StaticResource ResourceKey=StyleMTermButtonTitle}"/>

        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- 终端显示区域 -->
            <Grid Grid.Column="0" Margin="0,5,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- 打开的终端列表Tab页 -->
                <Grid Grid.Row="0">

                    <ScrollViewer x:Name="ScrollViewerOpenedSession" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                        <ListBox x:Name="ListBoxOpenedSession" ItemsSource="{Binding Path=SessionList}" SelectedItem="{Binding Path=SelectedSession}"
                                 SelectionChanged="ListBoxOpenedSession_SelectionChanged" Style="{StaticResource ResourceKey=StyleListBoxSessionList}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                    </ScrollViewer>

                </Grid>

                <!-- 终端展示页面 -->
                <Border Grid.Row="1" Background="{DynamicResource ResourceKey=Brush4003}"/>
                <ContentControl Grid.Row="1" x:Name="ContentControlSession"/>

            </Grid>

            <!-- 右侧窗格 -->
            <Grid Grid.Column="1">
                <mtermcontrols:MdToolPanel Menu="{Binding Path=RightPanelMenu}" Visibility="{Binding Path=ShellCommandPanelVisiblity, Converter={StaticResource ResourceKey=BooleanVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                          BorderThickness="1,0,0,0" Width="300" Style="{StaticResource ResourceKey=StyleMdToolPanel}"/>
            </Grid>

        </Grid>

        <!-- 状态栏 -->
        <Grid Grid.Row="3" x:Name="GridStatusbar" DataContext="{Binding ElementName=ListBoxOpenedSession, Path=SelectedItem}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Grid.ColumnSpan="9999"
                    BorderBrush="{DynamicResource ResourceKey=BrushStatsuBarBorder}"
                    BorderThickness="0,1,0,0"/>

            <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding Path=Status, Converter={StaticResource ResourceKey=SessionStatus2ImageConverter}}" Width="16" Height="16"/>
                    <TextBlock Text="{Binding Path=Status, Converter={StaticResource ResourceKey=SessionStatus2TextConverter}}" 
                               Foreground="{Binding Path=Status, Converter={StaticResource ResourceKey=SessionStatus2BrushConverter}}" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                </StackPanel>

                <TextBlock Text="{Binding Path=Uri}" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}" Margin="10,0,0,0"/>

                <StackPanel Orientation="Horizontal" Margin="20,0,0,0">
                    <Grid Visibility="Visible">
                        <Ellipse Width="15" Height="15" StrokeThickness="1" Stroke="#6a6a6a"/>
                        <!-- 停止录制状态 -->
                        <Ellipse Width="10" Height="10" Fill="Red" Visibility="{Binding Path=RecordStatus, Converter={StaticResource ResourceKey=RecordStatusVisibilityConverter}, ConverterParameter={x:Static termenum:RecordStatusEnum.Stop}}"/>
                        <!-- 正在录制状态 -->
                        <Border Width="8" Height="8" Background="Red" Visibility="{Binding Path=RecordStatus, Converter={StaticResource ResourceKey=RecordStatusVisibilityConverter}, ConverterParameter={x:Static termenum:RecordStatusEnum.Recording}}"/>
                    </Grid>

                    <TextBlock Text="{Binding Path=RecordStatus, Converter={StaticResource ResourceKey=RecordStatus2TextConverter}}" VerticalAlignment="Center" Margin="5,0,0,0"/>
                </StackPanel>

            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">

                <Border Style="{StaticResource ResourceKey=StyleBorderSplitter}"/>

                <TextBlock Text="总行数：" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                <TextBlock Text="{Binding Path=TotalRows}" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}" Margin="0,0,20,0"/>

                <TextBlock Text="大小：" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                <TextBlock Text="{Binding Path=ViewportRow}" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                <TextBlock Text=" x " Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                <TextBlock Text="{Binding Path=ViewportColumn}" Margin="0,0,10,0" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
            </StackPanel>

        </Grid>

        <Border Grid.Row="0" Grid.RowSpan="999" BorderThickness="1" BorderBrush="{DynamicResource ResourceKey=BrushWindowBorder}" IsHitTestVisible="False"/>

    </Grid>

</Window>
