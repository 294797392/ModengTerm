<UserControl x:Class="ModengTerm.UserControls.TerminalUserControls.ShellSessionUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:toolkitconverter="clr-namespace:WPFToolkit.Converters;assembly=WPFToolkit"
             xmlns:muct="clr-namespace:ModengTerm.UserControls.TerminalUserControls"
             xmlns:mcsext="clr-namespace:ModengTerm.Controls;assembly=ModengTerm.Controls"
             xmlns:termuc="clr-namespace:ModengTerm.UserControls.Terminals"
             xmlns:termenum="clr-namespace:ModengTerm.Terminal.Enumerations;assembly=ModengTerm.Terminal"
             xmlns:mterm="clr-namespace:ModengTerm"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <toolkitconverter:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
        <mterm:RecordStatusVisibilityConverter x:Key="RecordStatusVisibilityConverter"/>
        <mterm:RecordStatus2TextConverter x:Key="RecordStatus2TextConverter"/>
        <mterm:SessionStatus2TextConverter x:Key="SessionStatus2TextConverter"/>
        <mterm:SessionStatus2BrushConverter x:Key="SessionStatus2BrushConverter"/>
        <mterm:SessionStatus2ImageConverter x:Key="SessionStatus2ImageConverter"/>
        <mterm:OverlayPanelDock2HorizontalAlignmentConverter x:Key="OverlayPanelDock2HorizontalAlignmentConverter"/>
        <mterm:OverlayPanelDock2VerticalAlignmentConverter x:Key="OverlayPanelDock2VerticalAlignmentConverter"/>

        <Style x:Key="StyleButtonLocal" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="3"/>
        </Style>

        <Style x:Key="StyleToggleButtonLocal" TargetType="{x:Type ToggleButton}">
            <Setter Property="Margin" Value="3"/>
        </Style>

        <Style x:Key="StyleTextBlockStatusBar" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="StyleBorderSplitter" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=RES60001}"/>
            <Setter Property="Margin" Value="3,6,3,6"/>
            <Setter Property="Width" Value="2"/>
        </Style>

        <Style x:Key="StyleMdButtonLocal" TargetType="{x:Type mcsext:MdButton}" BasedOn="{StaticResource ResourceKey=StyleMdButton}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ResourceKey=RES60009E}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ResourceKey=RES60010E}"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Background" Value="{DynamicResource ResourceKey=RES60008E}"/>
            <Setter Property="SVGColor" Value="{DynamicResource ResourceKey=RES501013E}"/>
            <Setter Property="SVGMouseDownColor" Value="{DynamicResource ResourceKey=RES501017E}"/>
            <Setter Property="SVGMargin" Value="7"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="0,3,3,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>

        <!-- 显示终端内容区域 -->
        <Grid Grid.Row="0" x:Name="GridTerminal" Background="Transparent" Loaded="GridTerminal_Loaded" 
              MouseMove="GridTerminal_MouseMove"  MouseWheel="GridTerminal_MouseWheel"
              MouseDown="GridTerminal_MouseDown" MouseUp="GridTerminal_MouseUp"
              TextInput="GridDocument_TextInput" KeyDown="GridDocument_KeyDown"
              LostFocus="GridDocument_LostFocus" GotFocus="GridDocument_GotFocus">
            <Grid.ContextMenu>
                <ContextMenu ItemsSource="{Binding Path=ContextMenus}" MenuItem.Click="ContextMenu_Click"
                             Visibility="{Binding Path=ContextMenuVisibility}" Style="{StaticResource ResourceKey=StyleContextMenu}">
                    <ContextMenu.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}">
                            <TextBlock Text="{Binding Path=Name}"/>
                        </HierarchicalDataTemplate>
                    </ContextMenu.ItemTemplate>
                </ContextMenu>
            </Grid.ContextMenu>

            <Border x:Name="BorderBackground"/>
            <Image x:Name="ImageBackground" Stretch="Fill"/>

            <!-- DrawingArea1的大小和DocumentControl的DrawArea大小一致，用来模拟在DocumentControl上绘图 -->
            <muct:DrawingArea x:Name="DrawingArea1" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <muct:TerminalControl x:Name="DocumentAlternate"/>
            <muct:TerminalControl x:Name="DocumentMain"/>
        </Grid>

        <!-- 输入栏 -->
        <Grid Grid.Row="1" Height="30" Visibility="{Binding Path=InputPanelVisible, Converter={StaticResource ResourceKey=BooleanVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=Collapsed}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Grid.ColumnSpan="99" Background="White" BorderThickness="0,1,0,0" BorderBrush="Silver"/>

            <TextBlock Grid.Column="0" Text="输入：" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            <ComboBox Grid.Column="1" x:Name="ComboBoxHistoryCommands" VerticalContentAlignment="Center" Height="25" Margin="3,0,3,0" IsEditable="True"/>

            <Button Grid.Column="2" Content="发送" Click="ButtonSend_Click" Style="{StaticResource ResourceKey=StyleButtonLocal}"/>
            <Button Grid.Column="3" x:Name="ButtonOptions" Content="选项" Click="ButtonOptions_Checked" Style="{StaticResource ResourceKey=StyleButtonLocal}">
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="MenuItemHexInput" Header="16进制输入" IsCheckable="True"/>
                        <MenuItem x:Name="MenuItemSendCRLF" Header="自动换行" IsCheckable="True"/>
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <Button Grid.Column="4" Content="清空" Click="ButtonClear_Click" Style="{StaticResource ResourceKey=StyleButtonLocal}"/>

        </Grid>

        <!-- 状态栏 -->
        <Grid Grid.Row="2" x:Name="GridStatusbar" TextElement.Foreground="{DynamicResource ResourceKey=RES60003}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Grid.ColumnSpan="9999"
                    BorderBrush="{DynamicResource ResourceKey=RES60002}"
                    BorderThickness="0,1,0,0"/>

            <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding Path=Status, Converter={StaticResource ResourceKey=SessionStatus2ImageConverter}}" Width="16" Height="16"/>
                    <TextBlock Text="{Binding Path=Status, Converter={StaticResource ResourceKey=SessionStatus2TextConverter}}" 
                               Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                </StackPanel>

                <TextBlock Text="{Binding Path=Uri}" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}" Margin="10,0,0,0"/>

                <StackPanel Orientation="Horizontal" Margin="20,0,0,0">
                    <Grid Visibility="Visible">
                        <Ellipse Width="15" Height="15" StrokeThickness="1" Stroke="#6a6a6a"/>
                        <!-- 停止录制状态 -->
                        <Ellipse Width="10" Height="10" Fill="Red" Visibility="{Binding Path=RecordStatus, Converter={StaticResource ResourceKey=RecordStatusVisibilityConverter}, ConverterParameter={x:Static termenum:RecordStatusEnum.Stop}}"/>
                        <!-- 正在录制状态 -->
                        <Border Width="8" Height="8" Background="Red" Visibility="{Binding Path=RecordStatus, Converter={StaticResource ResourceKey=RecordStatusVisibilityConverter}, ConverterParameter={x:Static termenum:RecordStatusEnum.Recording}}"/>
                    </Grid>

                    <TextBlock Text="{Binding Path=RecordStatus, Converter={StaticResource ResourceKey=RecordStatus2TextConverter}}" VerticalAlignment="Center" Margin="5,0,0,0"/>
                </StackPanel>

            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">

                <Border Style="{StaticResource ResourceKey=StyleBorderSplitter}"/>

                <TextBlock Text="总行数：" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                <TextBlock Text="{Binding Path=TotalRows}" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}" Margin="0,0,20,0"/>

                <TextBlock Text="大小：" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                <TextBlock Text="{Binding Path=ViewportRow}" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                <TextBlock Text=" x " Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                <TextBlock Text="{Binding Path=ViewportColumn}" Margin="0,0,10,0" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
            </StackPanel>

        </Grid>

        <!-- OverlayPanel -->
        <ItemsControl Grid.Row="0" x:Name="ItemsControlOverlayPanels" ItemsSource="{Binding Path=OverlayPanels}">
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="{x:Type ContentPresenter}">
                    <Setter Property="Visibility" Value="{Binding Path=IsOpened, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ResourceKey=BooleanVisibilityConverter}}"/>
                    <Setter Property="HorizontalAlignment" Value="{Binding Path=Dock, Converter={StaticResource ResourceKey=OverlayPanelDock2HorizontalAlignmentConverter}}"/>
                    <Setter Property="VerticalAlignment" Value="{Binding Path=Dock, Converter={StaticResource ResourceKey=OverlayPanelDock2VerticalAlignmentConverter}}"/>
                </Style>
            </ItemsControl.ItemContainerStyle>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="5"/>
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" Grid.RowSpan="999" Background="{DynamicResource ResourceKey=RES60005E}" BorderBrush="{DynamicResource ResourceKey=RES60004E}" BorderThickness="1,0,1,1"/>

                        <TextBlock Grid.Row="0" Text="{Binding Path=Name}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,5,0,0"/>
                        <mcsext:MdButton Grid.Row="0" x:Name="ButtonClose" HorizontalAlignment="Right" VerticalAlignment="Center"
                                         SVGPath="{StaticResource ResourceKey=SVGIcon6}" Click="ButtonCloseOverlayPanel_Click"
                                         Style="{StaticResource ResourceKey=StyleMdButtonLocal}"/>

                        <ContentControl Grid.Row="1" Content="{Binding Path=Panel}" Margin="3"/>

                        <Border Grid.Row="2" Background="{DynamicResource ResourceKey=RES60006E}"/>

                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

    </Grid>
</UserControl>
