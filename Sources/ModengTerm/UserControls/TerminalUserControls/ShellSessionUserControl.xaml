<UserControl x:Class="ModengTerm.UserControls.TerminalUserControls.TerminalContentUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:terminal="clr-namespace:ModengTerm.Terminal"
             xmlns:modengterm="clr-namespace:ModengTerm"
             xmlns:modengtermbase="clr-namespace:ModengTerm.Base.Enumerations;assembly=ModengTerm.Base"
             xmlns:toolkitconverter="clr-namespace:WPFToolkit.Converters;assembly=WPFToolkit"
             xmlns:renderer="clr-namespace:ModengTerm.UserControls.TerminalUserControls.Rendering"
             xmlns:termuc="clr-namespace:ModengTerm.UserControls.Terminals"
             xmlns:termuc2="clr-namespace:ModengTerm.UserControls.TerminalUserControls"
             xmlns:termctrl="clr-namespace:ModengTerm.Controls"
             xmlns:termenum="clr-namespace:ModengTerm.Terminal.Enumerations;assembly=ModengTerm.Terminal"
             xmlns:termconv="clr-namespace:ModengTerm"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <toolkitconverter:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
        <termconv:RecordStatusVisibilityConverter x:Key="RecordStatusVisibilityConverter"/>
        <termconv:RecordStatus2TextConverter x:Key="RecordStatus2TextConverter"/>
        <termconv:SessionStatus2TextConverter x:Key="SessionStatus2TextConverter"/>
        <termconv:SessionStatus2BrushConverter x:Key="SessionStatus2BrushConverter"/>
        <termconv:SessionStatus2ImageConverter x:Key="SessionStatus2ImageConverter"/>

        <Style x:Key="StyleButtonLocal" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="3"/>
        </Style>

        <Style x:Key="StyleToggleButtonLocal" TargetType="{x:Type ToggleButton}">
            <Setter Property="Margin" Value="3"/>
        </Style>

        <Style x:Key="StyleTextBlockStatusBar" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="StyleBorderSplitter" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=RES60001}"/>
            <Setter Property="Margin" Value="3,6,3,6"/>
            <Setter Property="Width" Value="2"/>
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- 左侧窗格 -->
            <Grid Grid.Column="0">
            </Grid>

            <Grid Grid.Column="1" x:Name="GridDocument" Background="Transparent" Loaded="GridDocument_Loaded" 
                  MouseDown="GridDocument_MouseDown" TextInput="GridDocument_TextInput" KeyDown="GridDocument_KeyDown"
                  LostFocus="GridDocument_LostFocus" GotFocus="GridDocument_GotFocus">
                <Grid.ContextMenu>
                    <ContextMenu ItemsSource="{Binding Path=ContextMenus}" MenuItem.Click="ContextMenu_Click"
                                 Visibility="{Binding Path=ContextMenuVisibility}" Style="{StaticResource ResourceKey=StyleContextMenu}">
                        <ContextMenu.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}">
                                <TextBlock Text="{Binding Path=Name}"/>
                            </HierarchicalDataTemplate>
                        </ContextMenu.ItemTemplate>
                    </ContextMenu>
                </Grid.ContextMenu>

                <Border x:Name="BorderBackground"/>
                <Image x:Name="ImageBackground" Stretch="Fill"/>

                <renderer:DocumentControl x:Name="DocumentAlternate"/>
                <renderer:DocumentControl x:Name="DocumentMain"/>
            </Grid>

            <!-- 右侧窗格 -->
            <Grid Grid.Column="2">
                <termuc2:PanelUserControl PanelVM="{Binding Path=Panels[0]}" Width="300" Margin="5,0,0,0"/>
            </Grid>

        </Grid>

        <!-- 输入栏 -->
        <Grid Grid.Row="1" Height="30" Visibility="{Binding Path=InputPanelVisible, Converter={StaticResource ResourceKey=BooleanVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=Collapsed}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Grid.ColumnSpan="99" Background="White" BorderThickness="0,1,0,0" BorderBrush="Silver"/>

            <TextBlock Grid.Column="0" Text="输入：" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            <ComboBox Grid.Column="1" x:Name="ComboBoxHistoryCommands" VerticalContentAlignment="Center" Height="25" Margin="3,0,3,0" IsEditable="True"/>

            <Button Grid.Column="2" Content="发送" Click="ButtonSend_Click" Style="{StaticResource ResourceKey=StyleButtonLocal}"/>
            <Button Grid.Column="3" x:Name="ButtonOptions" Content="选项" Click="ButtonOptions_Checked" Style="{StaticResource ResourceKey=StyleButtonLocal}">
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="MenuItemHexInput" Header="16进制输入" IsCheckable="True"/>
                        <MenuItem x:Name="MenuItemSendCRLF" Header="自动换行" IsCheckable="True"/>
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <Button Grid.Column="4" Content="清空" Click="ButtonClear_Click" Style="{StaticResource ResourceKey=StyleButtonLocal}"/>

        </Grid>

        <!-- 状态栏 -->
        <Grid Grid.Row="2" x:Name="GridStatusbar" TextElement.Foreground="{DynamicResource ResourceKey=RES60003}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Grid.ColumnSpan="9999"
                    BorderBrush="{DynamicResource ResourceKey=RES60002}"
                    BorderThickness="0,1,0,0"/>

            <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding Path=Status, Converter={StaticResource ResourceKey=SessionStatus2ImageConverter}}" Width="16" Height="16"/>
                    <TextBlock Text="{Binding Path=Status, Converter={StaticResource ResourceKey=SessionStatus2TextConverter}}" 
                               Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                </StackPanel>

                <TextBlock Text="{Binding Path=Uri}" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}" Margin="10,0,0,0"/>

                <StackPanel Orientation="Horizontal" Margin="20,0,0,0">
                    <Grid Visibility="Visible">
                        <Ellipse Width="15" Height="15" StrokeThickness="1" Stroke="#6a6a6a"/>
                        <!-- 停止录制状态 -->
                        <Ellipse Width="10" Height="10" Fill="Red" Visibility="{Binding Path=RecordStatus, Converter={StaticResource ResourceKey=RecordStatusVisibilityConverter}, ConverterParameter={x:Static termenum:RecordStatusEnum.Stop}}"/>
                        <!-- 正在录制状态 -->
                        <Border Width="8" Height="8" Background="Red" Visibility="{Binding Path=RecordStatus, Converter={StaticResource ResourceKey=RecordStatusVisibilityConverter}, ConverterParameter={x:Static termenum:RecordStatusEnum.Recording}}"/>
                    </Grid>

                    <TextBlock Text="{Binding Path=RecordStatus, Converter={StaticResource ResourceKey=RecordStatus2TextConverter}}" VerticalAlignment="Center" Margin="5,0,0,0"/>
                </StackPanel>

            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">

                <Border Style="{StaticResource ResourceKey=StyleBorderSplitter}"/>

                <TextBlock Text="总行数：" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                <TextBlock Text="{Binding Path=TotalRows}" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}" Margin="0,0,20,0"/>

                <TextBlock Text="大小：" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                <TextBlock Text="{Binding Path=ViewportRow}" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                <TextBlock Text=" x " Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
                <TextBlock Text="{Binding Path=ViewportColumn}" Margin="0,0,10,0" Style="{StaticResource ResourceKey=StyleTextBlockStatusBar}"/>
            </StackPanel>

        </Grid>

        <!-- 自动完成下拉列表 -->
        <!--
            当用户使用鼠标点击ListBox，此时ListBox获取焦点，键盘输入事件转移到ListBox身上。
            KeyDown是路由事件，当AutoCompletionUserControl里的ListBox控件触发KeyDown事件的时候，事件会被继续传播到它的父元素AutoCompletionUserControl
        -->
        <termuc:AutoCompletionUserControl Grid.Row="0" Grid.RowSpan="9999" x:Name="AutoCompletionUserControl"
                                          Items="{Binding Path=Items}" IsOpen="{Binding Path=IsOpen}"
                                          VideoTerminal="{Binding Path=VideoTerminal}" Visibility="Collapsed"
                                          IsVisibleChanged="AutoCompletionUserControl_IsVisibleChanged"
                                          KeyDown="GridDocument_KeyDown" MouseDoubleClick="AutoCompletionUserControl_MouseDoubleClick"/>

    </Grid>
</UserControl>
