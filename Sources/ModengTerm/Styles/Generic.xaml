<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:toolkitconverter="clr-namespace:WPFToolkit.Converters;assembly=WPFToolkit"
    xmlns:mcontrol="clr-namespace:ModengTerm.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WPFToolkit;component/ClearDefaultStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <toolkitconverter:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>

    <!-- 通用控件 -->
    <!-- 要改主题颜色的话直接在这个里面改 -->

    <Style x:Key="StyleListBoxItemClipboardHistory" TargetType="{x:Type ListBoxItem}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=Brush503}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="Black"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource Brush502}"/>
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleListBoxClipboardHistory" TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=StyleListBoxItemClipboardHistory}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=Brush501}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="SelectedItem" Value="{Binding Path=SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"/>
                        <ItemsPresenter Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleButtonDefault" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Black"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="BorderBrush" Value="Silver"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                    </Grid>
                    
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleMTermButton" TargetType="{x:Type mcontrol:MTermButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mcontrol:MTermButton}">

                    <Grid>

                        <Border x:Name="BorderBackground" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="BorderMouseOver" Background="{TemplateBinding MouseOverBrush}" BorderBrush="{TemplateBinding MouseOverBorder}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed"/>
                        <Border x:Name="BorderMouseDown" Background="{TemplateBinding MouseDownBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed"/>

                        <Border Margin="{TemplateBinding SVGMargin}">
                            <Border.Background>
                                <DrawingBrush Stretch="Uniform">
                                    <DrawingBrush.Drawing>
                                        <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SVGColor}">
                                            <GeometryDrawing.Geometry>
                                                <PathGeometry Figures="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SVGPath}"/>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Border.Background>
                        </Border>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>

                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderMouseOver"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderMouseDown"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleMTermButtonTool" TargetType="{x:Type mcontrol:MTermButton}" BasedOn="{StaticResource ResourceKey=StyleMTermButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="MouseOverBorder" Value="Black"/>
        <Setter Property="SVGMargin" Value="5"/>
        <Setter Property="SVGColor" Value="#474747"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!--<Setter Property="BorderBrush" Value="Silver"/>-->
    </Style>

    <Style x:Key="StyleMToolPanel" TargetType="{x:Type mcontrol:MToolPanel}">
        <Setter Property="BorderBrush" Value="Silver"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type mcontrol:MToolPanel}">

                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="0"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Border BorderBrush="#dfdfdf" BorderThickness="0,0,0,1"/>

                            <TextBlock DataContext="{TemplateBinding Menu}" Text="{Binding Path=SelectedMenu.Name}"
                                       VerticalAlignment="Center" Margin="10,0,0,0"/>

                            <mcontrol:MTermButton x:Name="PART_CloseButton" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0"
                                                  SVGPath="{StaticResource ResourceKey=SVGIcon6}"
                                                  Style="{StaticResource ResourceKey=StyleMTermButtonTool}"/>

                        </Grid>

                        <ContentControl Grid.Row="1" x:Name="PART_Content" DataContext="{TemplateBinding Menu}" Content="{Binding Path=CurrentContent}"/>

                        <ListBox Grid.Row="2" x:Name="PART_ItemsHeader" DataContext="{TemplateBinding Menu}" ItemsSource="{Binding Path=MenuItems}"
                                 SelectedItem="{Binding Path=SelectedMenu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Name}" VerticalAlignment="Center"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                            <ListBox.Style>
                                <Style TargetType="{x:Type ListBox}">
                                    <Setter Property="BorderThickness" Value="0,1,0,0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBox}">
                                                <Grid>

                                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            Background="{TemplateBinding Background}"/>

                                                    <ItemsPresenter Grid.Column="0" Margin="{TemplateBinding Padding}"/>

                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.Style>

                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ResourceKey=BrushSessionSelected}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                    <Setter Property="Margin" Value="5,0,0,0"/>
                                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Setter Property="BorderThickness" Value="1,0,1,1"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="Padding" Value="5,0,5,0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Grid>
                                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,0,0"/>
                                                    <ContentPresenter Margin="{TemplateBinding Padding}"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>

                                </Style>
                            </ListBox.ItemContainerStyle>

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            
                        </ListBox>

                        <Border Grid.Row="0" Grid.RowSpan="999" BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                                IsHitTestVisible="False"/>

                    </Grid>

                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
