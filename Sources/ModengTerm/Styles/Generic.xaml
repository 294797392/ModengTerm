<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mcontrols="clr-namespace:ModengTerm.Controls"
    xmlns:mrendering="clr-namespace:ModengTerm.Rendering"
    xmlns:toolkitconverter="clr-namespace:WPFToolkit.Converters;assembly=WPFToolkit">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WPFToolkit;component/ClearDefaultStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <mrendering:ContentPaddingConverter x:Key="ContentPaddingConverter"/>
    <toolkitconverter:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>

    <!-- 通用控件 -->

    <Style x:Key="StyleMTermButton" TargetType="{x:Type mcontrols:MTermButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mcontrols:MTermButton}">

                    <Grid>
                        <Border x:Name="BorderBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.Background>
                                <DrawingBrush>
                                    <DrawingBrush.Drawing>
                                        <GeometryDrawing Brush="Black">
                                            <GeometryDrawing.Geometry>
                                                <PathGeometry Figures="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SVGPath}"/>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Border.Background>
                        </Border>

                        <ContentPresenter Margin="{TemplateBinding Padding}"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.7" TargetName="BorderBackground"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="1" TargetName="BorderBackground"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleDrawingDocument" TargetType="{x:Type mrendering:DrawingDocument}">
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type mrendering:DrawingDocument}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <mrendering:ContentArea Grid.Column="0" x:Name="PART_ContentArea"
                                                Margin="{TemplateBinding ContentPadding, Converter={StaticResource ResourceKey=ContentPaddingConverter}}"/>

                        <mrendering:DrawingScrollbar Grid.Column="1" x:Name="PART_Scrollbar" Visibility="{TemplateBinding ScrollbarVisible, Converter={StaticResource ResourceKey=BooleanVisibilityConverter}}"/>

                    </Grid>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="StyleDrawingScrollBar" TargetType="{x:Type mrendering:DrawingScrollbar}">
        <Style.Resources>
            <!-- 拖动标样式 -->
            <Style x:Key="StyleThumbLocal" TargetType="{x:Type Thumb}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#999999"/>
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Background" Value="#4D4D4D"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch" x:Name="HoverRectangle" 
                                           VerticalAlignment="Stretch" Width="{TemplateBinding Width}" 
                                           Stroke="{x:Null}" Fill="{TemplateBinding Background}"
                                           Opacity="{TemplateBinding Opacity}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True" />
                                <Trigger Property="IsEnabled" Value="False" >
                                    <Setter Property="Opacity" TargetName="Grid" Value="0.1"/>
                                </Trigger>
                                <Trigger Property="IsDragging" Value="True">
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- 拖动条两边的RepeatButton -->
            <Style x:Key="NuclearScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Grid>
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" 
                                       StrokeThickness="{TemplateBinding BorderThickness}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="StyleRepeatButtonBase" TargetType="{x:Type RepeatButton}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#999999"/>
                    </Trigger>
                </Style.Triggers>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="#4D4D4D"/>
            </Style>
            <Style x:Key="StyleRepeatButtonDecrease" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource ResourceKey=StyleRepeatButtonBase}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Grid>
                                <Path x:Name="Up_Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                      Data="M 0 0 L 5 5 L 10 0 Z" Fill="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Path.LayoutTransform>
                                        <RotateTransform x:Name="RotateTransform" Angle="180"/>
                                    </Path.LayoutTransform>
                                </Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="StyleRepeatButtonIncrease" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource ResourceKey=StyleRepeatButtonBase}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Grid>
                                <Path x:Name="Up_Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                      Data="M 0 0 L 5 5 L 10 0 Z" Fill="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Path.LayoutTransform>
                                        <RotateTransform x:Name="RotateTransform" Angle="0"/>
                                    </Path.LayoutTransform>
                                </Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="#2E2E2E"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mrendering:DrawingScrollbar}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="10" />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" Grid.RowSpan="3" Background="{TemplateBinding Background}"/>

                        <!-- 上面的三角形 -->
                        <RepeatButton Grid.Row="0" x:Name="DecreaseRepeat" Command="ScrollBar.LineUpCommand" Style="{StaticResource ResourceKey=StyleRepeatButtonDecrease}"/>

                        <Grid Grid.Row="1" Margin="4">
                            <!-- 滑动条 -->
                            <Track x:Name="PART_Track" Orientation="Vertical" 
                                   IsDirectionReversed="true" Width="{TemplateBinding Width}">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource ResourceKey=StyleThumbLocal}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <!-- 下面的三角形 -->
                        <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Command="ScrollBar.LineDownCommand" Style="{StaticResource ResourceKey=StyleRepeatButtonIncrease}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical" />
                            <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown" />
                            <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <DataTemplate x:Key="DataTemplateOpenedSession">
        <Grid>
            <TextBlock Text="{Binding Path=Name}"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="StyleListBoxItemTerminalWindow" TargetType="{x:Type ListBoxItem}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey=BrushTermTabFocusedBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=BrushTermTabFocusedForeground}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="3,0,0,0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BrushTermTabBorder}"/>
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleListBoxTerminalWindowList" TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=StyleListBoxItemTerminalWindow}"/>
        <Setter Property="Margin" Value="0,3,0,0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BrushTermTabFocusedBackground}"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"/>
                        <ItemsPresenter Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="StyleListBoxItemClipboardHistory" TargetType="{x:Type ListBoxItem}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=Brush503}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="Black"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource Brush502}"/>
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleListBoxClipboardHistory" TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=StyleListBoxItemClipboardHistory}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=Brush501}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="SelectedItem" Value="{Binding Path=SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"/>
                        <ItemsPresenter Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
</ResourceDictionary>
